<includes>
	<include name="Viewtype_Episode">
		<!-- Browser -->

		<control type="textbox">
					<include>Animation_ZoomedByMenu</include>
			<include>Animation_ZoomInZoomOut</include>
			<include>Animation_EpisodeFloat</include>
			<include>Animation_HiddenByInfo</include>
					<posx>560</posx>
					<posy>280</posy>
					<width>610</width>
					<height>96</height>
					<align>left</align>
					<label>$INFO[ListItem.Plot]</label>
					<animation type="Focus" reversible="false">
						<effect type="fade" start="0" end="100" time="200" />
					</animation>
					<autoscroll time="3200" delay="6000" repeat="6000">Skin.HasSetting(autoscroll)</autoscroll>
					<font>Font_EpisodePlot</font>
					<textcolor>EpisodePlot</textcolor>
					<visible>Control.IsVisible(51)</visible>
				</control>

		<control type="fixedlist" id="51">
			<viewtype label="40290">list</viewtype>
			<animation effect="slide" start="85,0" end="85,0" time="0" condition="Player.HasVideo">Conditional</animation>
			<posx>267</posx>
			<posy>110</posy>
			<width>980</width>
			<height>467</height>
			<pagecontrol>61</pagecontrol>
			<scrolltime>0</scrolltime>
			<orientation>vertical</orientation>
			<onup>51</onup>
			<ondown>51</ondown>
			<onleft>7000</onleft>
			<onright>7000</onright>
			<focusposition>2</focusposition>
			<movement>3</movement>
			<visible>Container.Content(episodes) | !IsEmpty(Container.PluginName)</visible>
			<include>Animation_ZoomedByMenu</include>
			<include>Animation_ZoomInZoomOut</include>
			<include>Animation_EpisodeFloat</include>
			<include>Animation_HiddenByInfo</include>
			<itemlayout width="980" height="60">
				<control type="label">
					<posx>125</posx>
					<posy>0</posy>
					<width>80</width>
					<height>60</height>
					<align>right</align>
					<aligny>center</aligny>
					<label>$INFO[ListItem.Episode]</label>
					<font>Font_EpisodeNumber</font>
					<textcolor>EpisodeNF</textcolor>
					<visible>!IsEmpty(ListItem.Episode)</visible>
				</control>
				<control type="label">
					<posx>150</posx>
					<posy>8</posy>
					<width>830</width>
					<height>60</height>
					<align>left</align>
					<label>$INFO[ListItem.Title]</label>
					<font>Font_EpisodeTitleNF</font>
					<textcolor>EpisodeNF</textcolor>
					<visible>!IsEmpty(ListItem.Episode)</visible>
				</control>
				<control type="label">
					<posx>150</posx>
					<posy>8</posy>
					<width>830</width>
					<height>60</height>
					<align>left</align>
					<label>$INFO[ListItem.Label]</label>
					<font>Font_EpisodeTitleNF</font>
					<textcolor>EpisodeNF</textcolor>
					<visible>IsEmpty(ListItem.Episode)</visible>
				</control>
				<control type="label">
					<posx>150</posx>
					<posy>31</posy>
					<width>633</width>
					<height>60</height>
					<align>left</align>
					<label>$LOCALIZE[40234] $INFO[ListItem.Date]</label>
					<font>Font_EpisodeDetailNF</font>
					<textcolor>EpisodeNF</textcolor>
					<visible>![Skin.HasSetting(tvoverlays) + stringcompare(ListItem.Overlay,OverlayWatched.png)]</visible>
					<visible>![Skin.HasSetting(tvoverlays) + [!stringcompare(ListItem.Overlay,OverlayWatched.png) + [stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.1.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.2.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.3.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.4.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.5.EpisodeTitle))]]]</visible>
					<visible>!IsEmpty(ListItem.Date)</visible>
				</control>
				<control type="label">
					<posx>150</posx>
					<posy>31</posy>
					<width>633</width>
					<height>60</height>
					<align>left</align>
					<label>$LOCALIZE[40234] $INFO[ListItem.Date][COLOR EpisodeWatchedNF] &#134;[/COLOR]</label>
					<font>Font_EpisodeDetailNF</font>
					<textcolor>EpisodeNF</textcolor>
					<visible>Skin.HasSetting(tvoverlays) + stringcompare(ListItem.Overlay,OverlayWatched.png)</visible>
				</control>
				<control type="label">
					<posx>150</posx>
					<posy>31</posy>
					<width>633</width>
					<height>60</height>
					<align>left</align>
					<label>$LOCALIZE[40234] $INFO[ListItem.Date][COLOR EpisodeWatchedNF] &#135;[/COLOR]</label>
					<font>Font_EpisodeDetailNF</font>
					<textcolor>EpisodeNF</textcolor>
					<visible>Skin.HasSetting(tvoverlays) + [!stringcompare(ListItem.Overlay,OverlayWatched.png) + [stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.1.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.2.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.3.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.4.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.5.EpisodeTitle))]]</visible>
				</control>
			</itemlayout>
			<focusedlayout width="980" height="164">
				<control type="image">
					<posx>13</posx>
					<posy>13</posy>
					<width>253</width>
					<height>139</height>
					<texture background="true" diffuse="episode/episodematte.png">$INFO[ListItem.Icon]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<animation type="Focus" reversible="false">
						<effect type="zoom" center="139,82" start="80" end="100" time="400" tween="back" easing="out" />
						<effect type="fade" start="80" end="100" time="400" />
					</animation>
				</control>
				<control type="image">
					<posx>0</posx>
					<posy>0</posy>
					<width>278</width>
					<height>164</height>
					<texture>episode/episodeframe.png</texture>
					<animation type="Focus" reversible="false">
						<effect type="zoom" center="139,82" start="80" end="100" time="400" tween="back" easing="out" />
						<effect type="fade" start="80" end="100" time="400" />
					</animation>
				</control>
				<include condition="Skin.HasSetting(tvoverlays) + Window.IsActive(6)">EpisodeTVOverlaysFO</include>
				<control type="label">
					<animation effect="slide" end="0,56" condition="IsEmpty(ListItem.Plot)">Conditional</animation>
					<posx>292</posx>
					<posy>10</posy>
					<width>606</width>
					<scrollout>false</scrollout>
					<pauseatend>1800</pauseatend>
					<scrollspeed>40</scrollspeed>
					<scroll>true</scroll>
					<label>$INFO[ListItem.Label]</label>
					<font>Font_EpisodeLabelFO</font>
					<textcolor>EpisodeLabelFO</textcolor>
					<animation type="Focus" reversible="false">
						<effect type="fade" start="0" end="100" time="200" />
					</animation>
					<visible>IsEmpty(ListItem.Episode)</visible>
				</control>
				<control type="label">
					<animation effect="slide" end="0,56" condition="IsEmpty(ListItem.Plot)">Conditional</animation>
					<posx>292</posx>
					<posy>10</posy>
					<width>606</width>
					<scrollout>false</scrollout>
					<pauseatend>1800</pauseatend>
					<scrollspeed>40</scrollspeed>
					<scroll>true</scroll>
					<label>$INFO[ListItem.Episode]$INFO[ListItem.Title,. ]</label>
					<font>Font_EpisodeLabelFO</font>
					<textcolor>EpisodeLabelFO</textcolor>
					<animation type="Focus" reversible="false">
						<effect type="fade" start="0" end="100" time="200" />
					</animation>
					<visible>!IsEmpty(ListItem.Episode)</visible>
				</control>
				<!--control type="textbox">
					<posx>292</posx>
					<posy>52</posy>
					<width>610</width>
					<height>96</height>
					<align>left</align>
					<label>$INFO[ListItem.Plot]</label>
					<animation type="Focus" reversible="false">
						<effect type="fade" start="0" end="100" time="200" />
					</animation>
					<autoscroll time="3200" delay="6000" repeat="6000">Skin.HasSetting(autoscroll)</autoscroll>
					<font>Font_EpisodePlot</font>
					<textcolor>EpisodePlot</textcolor>
				</control-->
			</focusedlayout>
		</control>
		<control type="group">
			<visible>Control.IsVisible(51)</visible>
			<control type="group">
				<animation type="Conditional" condition="Window.IsActive(2003)">
					<effect type="zoom" time="400" center="522,128" start="50" end="100" tween="cubic" easing="inout" />
				</animation>
				<include>EpisodeInfo</include>
				<visible>Container(51).Row(0) + Window.IsActive(2003)</visible>
			</control>
			<control type="group">
				<animation type="Conditional" condition="Window.IsActive(2003)">
					<effect type="zoom" time="400" center="522,239" start="50" end="100" tween="cubic" easing="inout" />
				</animation>
				<include>EpisodeInfo</include>
				<visible>Container(51).Row(1) + Window.IsActive(2003)</visible>
			</control>
			<control type="group">
				<animation type="Conditional" condition="Window.IsActive(2003)">
					<effect type="zoom" time="400" center="522,349" start="50" end="100" tween="cubic" easing="inout" />
				</animation>
				<include>EpisodeInfo</include>
				<visible>Container(51).Row(2) + Window.IsActive(2003)</visible>
			</control>
			<control type="group">
				<animation type="Conditional" condition="Window.IsActive(2003)">
					<effect type="zoom" time="400" center="522,460" start="50" end="100" tween="cubic" easing="inout" />
				</animation>
				<include>EpisodeInfo</include>
				<visible>Container(51).Row(3) + Window.IsActive(2003)</visible>
			</control>
			<control type="group">
				<animation type="Conditional" condition="Window.IsActive(2003)">
					<effect type="zoom" time="400" center="522,570" start="50" end="100" tween="cubic" easing="inout" />
				</animation>
				<include>EpisodeInfo</include>
				<visible>Container(51).Row(4) + Window.IsActive(2003)</visible>
			</control>
			<control type="group">
				<animation type="Conditional" condition="Window.IsActive(2003)">
					<effect type="zoom" time="400" center="522,680" start="50" end="100" tween="cubic" easing="inout" />
				</animation>
				<include>EpisodeInfo</include>
				<visible>Container(51).Row(5) + Window.IsActive(2003)</visible>
			</control>
		</control>
	</include>
	<include name="EpisodeInfo">
		<control type="image">
			<posx>37</posx>
			<posy>135</posy>
			<width>506</width>
			<height>278</height>
			<texture background="true" diffuse="episode/episodematte.png">$INFO[ListItem.Icon]</texture>
			<aspectratio scalediffuse="false">scale</aspectratio>
		</control>
		<control type="image">
			<posx>12</posx>
			<posy>110</posy>
			<width>556</width>
			<height>328</height>
			<texture>episode/episodeframe.png</texture>
		</control>
		<control type="image">
			<posx>420</posx>
			<posy>290</posy>
			<width>120</width>
			<height>120</height>
			<texture>episode/episodeframewatched.png</texture>
			<colordiffuse>WatchedIconBackFO</colordiffuse>
			<visible>stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.1.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.2.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.3.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.4.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.5.EpisodeTitle)) | stringcompare(ListItem.Overlay,OverlayWatched.png)</visible>
		</control>
		<control type="image">
			<posx>420</posx>
			<posy>290</posy>
			<width>120</width>
			<height>120</height>
			<texture>NewIcon.png</texture>
			<colordiffuse>WatchedIconDiffuseFO</colordiffuse>
			<visible>!stringcompare(ListItem.Overlay,OverlayWatched.png) + [stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.1.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.2.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.3.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.4.EpisodeTitle)) | stringcompare(ListItem.Title,Window(0).Property(LatestEpisode.5.EpisodeTitle))]</visible>
		</control>
		<control type="image">
			<posx>420</posx>
			<posy>290</posy>
			<width>120</width>
			<height>120</height>
			<info>ListItem.Overlay</info>
			<colordiffuse>WatchedIconDiffuseFO</colordiffuse>
			<visible>stringcompare(ListItem.Overlay,OverlayWatched.png)</visible>
		</control>
	</include>
</includes>